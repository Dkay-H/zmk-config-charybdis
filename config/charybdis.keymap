\#include \<dt-bindings/zmk/mouse.h>
\#include \<behaviors/mouse\_keys.dtsi>
\#include \<behaviors.dtsi>
\#include \<dt-bindings/zmk/bt.h>
\#include \<dt-bindings/zmk/keys.h>
\#include \<dt-bindings/zmk/outputs.h>
\#include \<dt-bindings/zmk/pointing.h>

/ {
chosen { zmk,matrix\_transform = \&default\_transform; };
};

\&mt {
quick-tap-ms = <250>;
global-quick-tap;
flavor = "tap-preferred";
tapping-term-ms = <170>;
};

/ {
combos {
compatible = "zmk,combos";

```
    combo_esc {
        timeout-ms = <50>;
        key-positions = <0 1>;
        bindings = <&kp ESC>;
    };
};

keymap {
    compatible = "zmk,keymap";

    BASE {
        bindings = <
```

\&kp GRAVE   \&kp N1       \&kp N2         \&kp N3      \&kp N4        \&kp N5   \&kp N6            \&kp N7        \&kp N8      \&kp N9           \&kp N0          \&kp MINUS
\&kp TAB     \&kp Q        \&kp W          \&kp E       \&kp R         \&kp T               \&kp Y  \&kp U         \&kp I       \&kp O            \&kp P           \&kp EQUAL
\&kp ESC     \&mt LCTRL A  \&mt LALT S     \&mt LGUI D  \&mt LSHIFT F  \&kp G               \&kp H  \&mt RSHIFT J  \&mt RGUI K  \&mt RALT L       \&mt RCTRL SEMI  \&kp APOS
\&kp LSHIFT  \&lt 3 Z      \&kp X          \&kp C       \&kp V         \&kp B               \&kp N  \&kp M         \&kp COMMA   \&kp DOT          \&lt 3 SLASH     \&kp RSHIFT
\&lt 1 BACKSPACE  \&kp SPACE  \&kp LGUI   \&kp MB1  \&kp MB2  \&kp ENTER   \&kp SPACE   \&lt 2 BACKSPACE
\>;
};

```
    NAV {
        bindings = <
```

\&kp F12          \&kp F1          \&kp F2           \&kp F3             \&kp F4           \&kp F5    \&kp F6                \&kp F7  \&kp F8  \&kp F9  \&kp F10          \&kp F11
\&trans           \&kp SCROLLLOCK  \&kp PAUSE\_BREAK  \&kp UP             \&kp EQUAL        \&kp LBRC              \&kp RBRC  \&kp N7  \&kp N8  \&kp N9  \&kp KP\_PLUS      \&trans
\&kp PRINTSCREEN  \&kp INSERT      \&kp LEFT         \&kp DOWN           \&kp RIGHT        \&kp LBKT              \&kp RBKT  \&kp N4  \&kp N5  \&kp N6  \&kp KP\_MINUS     \&kp KP\_DIVIDE
\&trans           \&kp DEL         \&kp PG\_UP        \&kp CAPS           \&kp PG\_DN        \&kp LPAR              \&kp RPAR  \&kp N1  \&kp N2  \&kp N3  \&kp KP\_MULTIPLY  \&trans
\&trans          \&trans           \&kp C\_VOLUME\_DOWN  \&kp C\_VOLUME\_UP  \&trans    \&kp KP\_DOT            \&kp N0          \&mo 3
\>;
};

```
    SYM {
        bindings = <
```

\&kp F12  \&kp F1         \&kp F2     \&kp F3             \&kp F4            \&kp F5         \&kp F6                         \&kp F7            \&kp F8     \&kp F9        \&kp F10        \&kp F11
\&trans   \&kp EXCL       \&kp AT     \&kp HASH           \&kp DLLR          \&kp PRCNT                          \&kp CARET  \&kp AMPS          \&kp STAR   \&kp QUESTION  \&kp SQT        \&trans
\&trans   \&kp PLUS       \&kp EQUAL  \&kp LPAR           \&kp RPAR          \&kp DQT                            \&kp COLON  \&kp LBKT          \&kp RBKT   \&kp LBRC      \&kp RBRC       \&trans
\&trans   \&kp LESS\_THAN  \&kp PIPE   \&kp MINUS          \&kp GREATER\_THAN  \&kp BACKSLASH                      \&kp GRAVE  \&kp UNDERSCORE    \&kp SLASH  \&kp TILDE     \&kp SEMICOLON  \&trans
\&mo 3          \&trans     \&kp C\_VOLUME\_DOWN  \&kp C\_VOLUME\_UP   \&trans         \&kt C\_FAST\_FORWARD             \&kp C\_PLAY\_PAUSE             \&trans
\>;
};

```
    ADJ {
        bindings = <
```

\&kp F12  \&kp F1       \&kp F2          \&kp F3            \&kp F4             \&kp F5           \&kp F6                \&kp F7      \&kp F8      \&kp F9      \&kp F10      \&kp F11
\&trans   \&sys\_reset   \&bt BT\_PRV      \&bt BT\_NXT        \&bt BT\_CLR         \&out OUT\_TOG             \&bt BT\_SEL 0  \&bt BT\_CLR  \&bt BT\_PRV  \&bt BT\_NXT  \&sys\_reset   \&trans
\&trans   \&bootloader  \&kp C\_PREVIOUS  \&kp C\_PLAY\_PAUSE  \&kp C\_NEXT         \&kp C\_MUTE               \&bt BT\_SEL 1  \&mkp MB1    \&mkp MB2    \&mkp MB3    \&bootloader  \&trans
\&trans   \&trans       \&mo 5           \&mo 4             \&kp C\_VOLUME\_DOWN  \&kp C\_VOLUME\_UP          \&bt BT\_SEL 2  \&trans      \&mo 4       \&mo 5       \&trans       \&trans
\&trans       \&trans          \&trans            \&trans             \&trans           \&trans                \&trans                  \&trans
\>;
};

```
    SNIP {
        bindings = <
```

\&trans  \&trans  \&trans  \&trans  \&trans  \&trans  \&trans          \&trans    \&trans    \&trans    \&trans  \&trans
\&trans  \&trans  \&trans  \&trans  \&trans  \&trans          \&trans  \&trans    \&trans    \&trans    \&trans  \&trans
\&trans  \&trans  \&trans  \&trans  \&trans  \&trans          \&trans  \&mkp MB1  \&mkp MB2  \&mkp MB3  \&trans  \&trans
\&trans  \&trans  \&mo 5   \&trans  \&trans  \&trans          \&trans  \&trans    \&trans    \&mo 5     \&trans  \&trans
\&trans  \&trans  \&trans  \&trans  \&trans  \&trans          \&trans              \&trans
\>;
};

```
    SCROLL {
        bindings = <
```

\&trans  \&trans  \&trans  \&trans  \&trans  \&trans  \&trans          \&trans    \&trans    \&trans    \&trans  \&trans
\&trans  \&trans  \&trans  \&trans  \&trans  \&trans          \&trans  \&trans    \&trans    \&trans    \&trans  \&trans
\&trans  \&trans  \&trans  \&trans  \&trans  \&trans          \&trans  \&mkp MB1  \&mkp MB2  \&mkp MB3  \&trans  \&trans
\&trans  \&trans  \&trans  \&trans  \&trans  \&trans          \&trans  \&trans    \&trans    \&trans    \&trans  \&trans
\&trans  \&trans  \&trans  \&trans  \&trans  \&trans          \&trans              \&trans
\>;
};
};
};
